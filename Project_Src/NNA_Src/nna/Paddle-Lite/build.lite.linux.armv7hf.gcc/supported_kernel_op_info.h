
// Copyright (c) 2019 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once
#include<vector>
#include<map>
#include<string>

const std::vector<std::vector<std::string>> supported_ops_target = {

    // kUnk_OPS: 
    {"search_fc","sequence_reshape","__xpu__squeeze_excitation_block","sequence_reverse","fpga_conv2d","dequantize_linear","sequence_concat","search_seq_depadding","asin","conv3d","__xpu__resnet50","__xpu__bigru","fake_channel_wise_dequantize_max_abs","sequence_pool_concat","sequence_topk_avg_pooling","io_copy","search_group_padding","atan","fake_quantize_range_abs_max","fake_quantize_abs_max","sequence_reverse_embedding","softsign","__xpu__conv2d","var_conv_2d","search_aligned_mat_mul","attention_padding_mask","search_attention_padding_mask","__xpu__multi_encoder","__xpu__logit","bmm","__xpu__mmdnn_search_attention","__xpu__mmdnn_search_attention2","__xpu__fc","search_seq_softmax","__xpu__softmax_topk","__xpu__multi_softmax","io_copy_once","__xpu__embedding_with_eltwise_add","quantize_linear","fake_dequantize_max_abs","acos","tan","search_grnn","sequence_arithmetic","search_seq_arithmetic","match_matrix_tensor","fake_quantize_dequantize_moving_average_abs_max","__xpu__generate_sequence","fake_channel_wise_quantize_dequantize_abs_max","__xpu__mmdnn_bid_emb_grnn_att","__xpu__mmdnn_bid_emb_grnn_att2","__xpu__mmdnn_bid_emb_att","__xpu__mmdnn_match_conv_topk","__xpu__mmdnn_merge_all","search_seq_fc","fake_quantize_dequantize_abs_max","fake_quantize_moving_average_abs_max","__xpu__dynamic_lstm_fuse_op","topk_pooling"},

    // kHost_OPS: 
    {"fill_constant_batch_size_like","unsqueeze","sigmoid","uniform_random","flatten2","retinanet_detection_output","shape","expand_as","less_than","cumsum","read_from_array","conditional_block","one_hot_v2","inverse","pad2d","merge_lod_tensor","reduce_any","sequence_mask","hard_swish","fill_zeros_like","norm","elu","matrix_nms","reduce_all","fill_any_like","expand_v2","pad3d","relu_clipped","strided_slice","tanh","unique_with_counts","roll","thresholded_relu","density_prior_box","greater_than","prior_box","where","sequence_unpad","square","crop","logical_and","flatten","cos_sim","multiclass_nms2","select_input","crf_decoding","polygon_box_transform","abs","generate_proposals_v2","print","one_hot","sequence_softmax","top_k","tril_triu","collect_fpn_proposals","beam_search","meshgrid","im2sequence","unfold","generate_proposals","unsqueeze2","gather_nd","cos","reverse","p_norm","equal","hard_sigmoid","argsort","softplus","range","arg_max","assign","feed","write_back","relu","sequence_expand","logical_xor","log","yolo_box","reshape2","squeeze2","anchor_generator","box_coder","distribute_fpn_proposals","prelu","top_k_v2","roi_align","sampling_id","sequence_pad","tensor_array_to_tensor","box_clip","linspace","squeeze","lod_reset","not_equal","reciprocal","deformable_conv","split","flip","ctc_align","cast","while","pixel_shuffle","fetch","fill_constant","index_select","assign_value","logical_or","increment","write_to_array","floor","reshape","beam_search_decode","multiclass_nms3","unstack","multiclass_nms","crop_tensor","tile","log_softmax","sin","gaussian_random","lod_array_length","rsqrt","gather_tree","relu6","less_equal","is_empty","max_pool2d_with_index","stack","expand","unbind","swish","logical_not","greater_equal","leaky_relu","gather","roi_perspective_transform","where_index","exp","correlation","shuffle_channel","flatten_contiguous_range","scatter_nd_add"},

    // kX86_OPS: 
    {},
    // kCUDA_OPS: 
    {},
    // kARM_OPS: 
    {"nearest_interp","fusion_elementwise_min_activation","sigmoid","layer_norm","hard_swish","sqrt","lstm","conv2d_transpose","thresholded_relu","layout","elementwise_pow","grid_sampler","elementwise_add","fusion_elementwise_add_activation","elu","tanh","rnn","lrn","leaky_relu","split_lod_tensor","gelu","relu_clipped","deformable_conv","fusion_elementwise_div_activation","softmax","prior_box","mean","square","sign","slice","gru_unit","scale","depthwise_conv2d_transpose","bilinear_interp","fusion_elementwise_sub_activation","sum","abs","calib","mul","elementwise_mul","calib_once","transpose","reduce_min","affine_grid","pad2d","prelu","hard_sigmoid","softplus","matmul","arg_max","batch_norm","conv2d","mish","pow","lookup_table_v2","affine_channel","nearest_interp_v2","fusion_elementwise_max_activation","elementwise_mod","elementwise_floordiv","log","yolo_box","negative","relu","box_coder","calib_inplace","matmul_v2","sequence_pool","dropout","sparse_conv2d","depthwise_conv2d","reduce_mean","reciprocal","elementwise_div","elementwise_sub","instance_norm","erf","pixel_shuffle","scatter","decode_bboxes","sequence_expand_as","clip","axpy","gru","fusion_elementwise_mul_activation","reduce_prod","floor","bilinear_interp_v2","reduce_max","transpose2","elementwise_max","sequence_conv","reduce_sum","rsqrt","relu6","elementwise_min","fc","group_norm","pool2d","concat","layout_once","swish","lookup_table_dequant","lookup_table","exp","shuffle_channel","sync_batch_norm"},

    // kOpenCL_OPS: 
    {},
    // kAny_OPS: 
    {},
    // kFPGA_OPS: 
    {},
    // kNPU_OPS: 
    {},
    // kXPU_OPS: 
    {},
    // kBM_OPS: 
    {},
    // kMLU_OPS: 
    {},
    // kIntelFPGA_OPS: 
    {"subgraph"},

    // kMetal_OPS: 
    {},
    // kNNAdapter_OPS: 
    {},};
const std::map<std::string, std::vector<std::string>> supported_ops={
    {"search_fc", { "kUnk" }},
    {"merge_lod_tensor", { "kHost" }},
    {"elementwise_sub", { "kARM" }},
    {"elementwise_add", { "kARM" }},
    {"elementwise_mul", { "kARM" }},
    {"elementwise_max", { "kARM" }},
    {"elementwise_min", { "kARM" }},
    {"elementwise_div", { "kARM" }},
    {"elementwise_floordiv", { "kARM" }},
    {"elementwise_mod", { "kARM" }},
    {"elementwise_pow", { "kARM" }},
    {"expand", { "kHost" }},
    {"sequence_pool", { "kARM" }},
    {"sequence_reshape", { "kUnk" }},
    {"fetch", { "kHost" }},
    {"__xpu__squeeze_excitation_block", { "kUnk" }},
    {"sequence_reverse", { "kUnk" }},
    {"fpga_conv2d", { "kUnk" }},
    {"one_hot_v2", { "kHost" }},
    {"prior_box", { "kHost", "kARM" }},
    {"lod_array_length", { "kHost" }},
    {"feed", { "kHost" }},
    {"matmul", { "kARM" }},
    {"inverse", { "kHost" }},
    {"fill_zeros_like", { "kHost" }},
    {"clip", { "kARM" }},
    {"lookup_table", { "kARM" }},
    {"distribute_fpn_proposals", { "kHost" }},
    {"dequantize_linear", { "kUnk" }},
    {"where_index", { "kHost" }},
    {"sequence_concat", { "kUnk" }},
    {"softmax", { "kARM" }},
    {"search_seq_depadding", { "kUnk" }},
    {"tril_triu", { "kHost" }},
    {"asin", { "kUnk" }},
    {"one_hot", { "kHost" }},
    {"sequence_expand", { "kHost" }},
    {"lookup_table_dequant", { "kARM" }},
    {"tensor_array_to_tensor", { "kHost" }},
    {"lod_reset", { "kHost" }},
    {"instance_norm", { "kARM" }},
    {"box_clip", { "kHost" }},
    {"lstm", { "kARM" }},
    {"gru", { "kARM" }},
    {"correlation", { "kHost" }},
    {"group_norm", { "kARM" }},
    {"conv2d", { "kARM" }},
    {"conv3d", { "kUnk" }},
    {"depthwise_conv2d", { "kARM" }},
    {"top_k", { "kHost" }},
    {"__xpu__resnet50", { "kUnk" }},
    {"unfold", { "kHost" }},
    {"pow", { "kARM" }},
    {"unbind", { "kHost" }},
    {"argsort", { "kHost" }},
    {"reverse", { "kHost" }},
    {"scale", { "kARM" }},
    {"mul", { "kARM" }},
    {"__xpu__bigru", { "kUnk" }},
    {"fake_channel_wise_dequantize_max_abs", { "kUnk" }},
    {"crf_decoding", { "kHost" }},
    {"scatter", { "kARM" }},
    {"sequence_pool_concat", { "kUnk" }},
    {"unstack", { "kHost" }},
    {"sequence_topk_avg_pooling", { "kUnk" }},
    {"calib_inplace", { "kARM" }},
    {"concat", { "kARM" }},
    {"is_empty", { "kHost" }},
    {"affine_grid", { "kARM" }},
    {"tile", { "kHost" }},
    {"transpose", { "kARM" }},
    {"transpose2", { "kARM" }},
    {"bilinear_interp_v2", { "kARM" }},
    {"nearest_interp_v2", { "kARM" }},
    {"generate_proposals_v2", { "kHost" }},
    {"im2sequence", { "kHost" }},
    {"io_copy", { "kUnk" }},
    {"search_group_padding", { "kUnk" }},
    {"atan", { "kUnk" }},
    {"gather", { "kHost" }},
    {"max_pool2d_with_index", { "kHost" }},
    {"mean", { "kARM" }},
    {"shape", { "kHost" }},
    {"print", { "kHost" }},
    {"sequence_mask", { "kHost" }},
    {"ctc_align", { "kHost" }},
    {"logical_xor", { "kHost" }},
    {"logical_and", { "kHost" }},
    {"logical_or", { "kHost" }},
    {"logical_not", { "kHost" }},
    {"fake_quantize_range_abs_max", { "kUnk" }},
    {"fake_quantize_abs_max", { "kUnk" }},
    {"sequence_reverse_embedding", { "kUnk" }},
    {"gaussian_random", { "kHost" }},
    {"sign", { "kARM" }},
    {"assign", { "kHost" }},
    {"square", { "kHost", "kARM" }},
    {"relu_clipped", { "kHost", "kARM" }},
    {"swish", { "kHost", "kARM" }},
    {"log", { "kHost", "kARM" }},
    {"exp", { "kHost", "kARM" }},
    {"abs", { "kHost", "kARM" }},
    {"floor", { "kHost", "kARM" }},
    {"hard_sigmoid", { "kHost", "kARM" }},
    {"sqrt", { "kARM" }},
    {"rsqrt", { "kHost", "kARM" }},
    {"softsign", { "kUnk" }},
    {"gelu", { "kARM" }},
    {"hard_swish", { "kHost", "kARM" }},
    {"reciprocal", { "kHost", "kARM" }},
    {"mish", { "kARM" }},
    {"sigmoid", { "kHost", "kARM" }},
    {"tanh", { "kHost", "kARM" }},
    {"relu", { "kHost", "kARM" }},
    {"leaky_relu", { "kHost", "kARM" }},
    {"relu6", { "kHost", "kARM" }},
    {"prelu", { "kHost", "kARM" }},
    {"thresholded_relu", { "kHost", "kARM" }},
    {"elu", { "kHost", "kARM" }},
    {"erf", { "kARM" }},
    {"softplus", { "kHost", "kARM" }},
    {"retinanet_detection_output", { "kHost" }},
    {"__xpu__conv2d", { "kUnk" }},
    {"unique_with_counts", { "kHost" }},
    {"sparse_conv2d", { "kARM" }},
    {"write_to_array", { "kHost" }},
    {"conditional_block", { "kHost" }},
    {"sin", { "kHost" }},
    {"var_conv_2d", { "kUnk" }},
    {"search_aligned_mat_mul", { "kUnk" }},
    {"cast", { "kHost" }},
    {"beam_search_decode", { "kHost" }},
    {"attention_padding_mask", { "kUnk" }},
    {"search_attention_padding_mask", { "kUnk" }},
    {"__xpu__multi_encoder", { "kUnk" }},
    {"dropout", { "kARM" }},
    {"select_input", { "kHost" }},
    {"flip", { "kHost" }},
    {"__xpu__logit", { "kUnk" }},
    {"cos", { "kHost" }},
    {"bmm", { "kUnk" }},
    {"__xpu__mmdnn_search_attention", { "kUnk" }},
    {"__xpu__mmdnn_search_attention2", { "kUnk" }},
    {"rnn", { "kARM" }},
    {"crop", { "kHost" }},
    {"anchor_generator", { "kHost" }},
    {"pool2d", { "kARM" }},
    {"negative", { "kARM" }},
    {"cos_sim", { "kHost" }},
    {"gru_unit", { "kARM" }},
    {"generate_proposals", { "kHost" }},
    {"box_coder", { "kHost", "kARM" }},
    {"crop_tensor", { "kHost" }},
    {"log_softmax", { "kHost" }},
    {"read_from_array", { "kHost" }},
    {"sequence_conv", { "kARM" }},
    {"__xpu__fc", { "kUnk" }},
    {"write_back", { "kHost" }},
    {"deformable_conv", { "kHost", "kARM" }},
    {"stack", { "kHost" }},
    {"unsqueeze", { "kHost" }},
    {"unsqueeze2", { "kHost" }},
    {"pixel_shuffle", { "kHost", "kARM" }},
    {"uniform_random", { "kHost" }},
    {"search_seq_softmax", { "kUnk" }},
    {"norm", { "kHost" }},
    {"p_norm", { "kHost" }},
    {"arg_max", { "kHost", "kARM" }},
    {"collect_fpn_proposals", { "kHost" }},
    {"nearest_interp", { "kARM" }},
    {"bilinear_interp", { "kARM" }},
    {"__xpu__softmax_topk", { "kUnk" }},
    {"split_lod_tensor", { "kARM" }},
    {"equal", { "kHost" }},
    {"not_equal", { "kHost" }},
    {"less_than", { "kHost" }},
    {"less_equal", { "kHost" }},
    {"greater_than", { "kHost" }},
    {"greater_equal", { "kHost" }},
    {"__xpu__multi_softmax", { "kUnk" }},
    {"calib", { "kARM" }},
    {"fc", { "kARM" }},
    {"io_copy_once", { "kUnk" }},
    {"linspace", { "kHost" }},
    {"sampling_id", { "kHost" }},
    {"subgraph", { "kIntelFPGA" }},
    {"grid_sampler", { "kARM" }},
    {"conv2d_transpose", { "kARM" }},
    {"depthwise_conv2d_transpose", { "kARM" }},
    {"roi_perspective_transform", { "kHost" }},
    {"yolo_box", { "kHost", "kARM" }},
    {"__xpu__embedding_with_eltwise_add", { "kUnk" }},
    {"slice", { "kARM" }},
    {"density_prior_box", { "kHost" }},
    {"layout", { "kARM" }},
    {"index_select", { "kHost" }},
    {"quantize_linear", { "kUnk" }},
    {"fake_dequantize_max_abs", { "kUnk" }},
    {"where", { "kHost" }},
    {"flatten", { "kHost" }},
    {"flatten2", { "kHost" }},
    {"flatten_contiguous_range", { "kHost" }},
    {"batch_norm", { "kARM" }},
    {"sync_batch_norm", { "kARM" }},
    {"while", { "kHost" }},
    {"lrn", { "kARM" }},
    {"multiclass_nms", { "kHost" }},
    {"multiclass_nms2", { "kHost" }},
    {"multiclass_nms3", { "kHost" }},
    {"acos", { "kUnk" }},
    {"shuffle_channel", { "kHost", "kARM" }},
    {"fill_any_like", { "kHost" }},
    {"assign_value", { "kHost" }},
    {"tan", { "kUnk" }},
    {"strided_slice", { "kHost" }},
    {"top_k_v2", { "kHost" }},
    {"squeeze", { "kHost" }},
    {"squeeze2", { "kHost" }},
    {"polygon_box_transform", { "kHost" }},
    {"search_grnn", { "kUnk" }},
    {"fusion_elementwise_sub_activation", { "kARM" }},
    {"fusion_elementwise_add_activation", { "kARM" }},
    {"fusion_elementwise_mul_activation", { "kARM" }},
    {"fusion_elementwise_max_activation", { "kARM" }},
    {"fusion_elementwise_min_activation", { "kARM" }},
    {"fusion_elementwise_div_activation", { "kARM" }},
    {"sequence_arithmetic", { "kUnk" }},
    {"search_seq_arithmetic", { "kUnk" }},
    {"pad2d", { "kHost", "kARM" }},
    {"layer_norm", { "kARM" }},
    {"gather_nd", { "kHost" }},
    {"match_matrix_tensor", { "kUnk" }},
    {"fake_quantize_dequantize_moving_average_abs_max", { "kUnk" }},
    {"__xpu__generate_sequence", { "kUnk" }},
    {"expand_v2", { "kHost" }},
    {"fake_channel_wise_quantize_dequantize_abs_max", { "kUnk" }},
    {"__xpu__mmdnn_bid_emb_grnn_att", { "kUnk" }},
    {"__xpu__mmdnn_bid_emb_grnn_att2", { "kUnk" }},
    {"__xpu__mmdnn_bid_emb_att", { "kUnk" }},
    {"__xpu__mmdnn_match_conv_topk", { "kUnk" }},
    {"__xpu__mmdnn_merge_all", { "kUnk" }},
    {"pad3d", { "kHost" }},
    {"reduce_sum", { "kARM" }},
    {"reduce_prod", { "kARM" }},
    {"reduce_max", { "kARM" }},
    {"reduce_min", { "kARM" }},
    {"reduce_all", { "kHost" }},
    {"reduce_any", { "kHost" }},
    {"reduce_mean", { "kARM" }},
    {"beam_search", { "kHost" }},
    {"reshape", { "kHost" }},
    {"reshape2", { "kHost" }},
    {"layout_once", { "kARM" }},
    {"sum", { "kARM" }},
    {"search_seq_fc", { "kUnk" }},
    {"lookup_table_v2", { "kARM" }},
    {"increment", { "kHost" }},
    {"fake_quantize_dequantize_abs_max", { "kUnk" }},
    {"roll", { "kHost" }},
    {"fake_quantize_moving_average_abs_max", { "kUnk" }},
    {"split", { "kHost" }},
    {"__xpu__dynamic_lstm_fuse_op", { "kUnk" }},
    {"gather_tree", { "kHost" }},
    {"cumsum", { "kHost" }},
    {"axpy", { "kARM" }},
    {"topk_pooling", { "kUnk" }},
    {"matmul_v2", { "kARM" }},
    {"affine_channel", { "kARM" }},
    {"fill_constant_batch_size_like", { "kHost" }},
    {"sequence_expand_as", { "kARM" }},
    {"sequence_unpad", { "kHost" }},
    {"calib_once", { "kARM" }},
    {"range", { "kHost" }},
    {"fill_constant", { "kHost" }},
    {"scatter_nd_add", { "kHost" }},
    {"decode_bboxes", { "kARM" }},
    {"matrix_nms", { "kHost" }},
    {"roi_align", { "kHost" }},
    {"expand_as", { "kHost" }},
    {"meshgrid", { "kHost" }},
    {"sequence_softmax", { "kHost" }},
    {"sequence_pad", { "kHost" }}
};